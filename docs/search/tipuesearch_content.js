var tipuesearch = {"pages":[{"title":"Website Permissions","text":"    Summary  This script helps manage website permissions by giving you a clean YAML configuration file in which you define what paths should have READ, WRITE, and EXECUTE permissions, as well as who the user and group should be.  It facilitates different perms by environment: prod, staging, dev.  And automatically handles common Drupal path permissions.  Visit https:\/\/aklump.github.io\/website-perms for full documentation.  Quick Start   Install in your repository root using cloudy pm-install aklump\/perms Open bin\/&#95;perms.local.yml and update the user and group values. Open bin\/&#95;perms.yml and modify as needed. In your CLI enter .\/bin\/perms to get an overview.   Requirements  You must have Cloudy installed on your system to install this package.  Installation  The installation script above will generate the following structure where . is your repository root.  . \u251c\u2500\u2500 bin \u2502\u00a0\u00a0 \u251c\u2500\u2500 perms -&gt; ..\/opt\/perms\/perms.sh \u2502\u00a0\u00a0 \u251c\u2500\u2500 _perms.custom.sh \u2502\u00a0\u00a0 \u2514\u2500\u2500 config \u2502\u00a0\u00a0     \u251c\u2500\u2500 perms.yml \u2502\u00a0\u00a0     \u2514\u2500\u2500 perms.local.yml \u251c\u2500\u2500 opt \u2502   \u251c\u2500\u2500 cloudy \u2502   \u2514\u2500\u2500 aklump \u2502       \u2514\u2500\u2500 perms \u2514\u2500\u2500 {public web root}   To Update   Update to the latest version from your repo root: cloudy pm-update aklump\/perms   Configuration Files       Filename   Description   VCS       perms.yml   Configuration shared across all server environments: prod, staging, dev   yes     perms.local.yml   Configuration overrides for a single environment; not version controlled.   no     &#95;perms.custom.sh   Optional.  One of any number of custom Bash scripts to be sourced during the apply command.  Use it for anything custom that is not handled by configuration values.  The filename(s) may be configured; see post_apply_scripts.  Return non-zero to indicate a failure. You may delete this if not used, but you must remove the path from post_apply_scripts.   yes     Custom Configuration   You may add any additional keys to path_to, to use them in your post_apply_scripts. They will automatically be made available as variables.  For example $path_to_some_path_of_yours holds the config value and is available in all post_apply_scripts.  They will also be automatically validated to make sure they are paths that do exist.   Usage   For a configuration overview .\/bin\/perms To apply permissions: .\/bin\/perms apply To see all commands use .\/bin\/perms help   If you see Permission denied when running commands, you will need to sudo the command.  Contributing  If you find this project useful... please consider making a donation. ","tags":"","url":"README.html"},{"title":"Tasklist","text":"  - [ ] ld--roadmap: Fix the delay caused by deleting files at beginning of compile. - [ ] ld--todos: a task list item - [ ] ld--todos: a task list item @w-10 - [ ] demos--md_extra: Todo items will get aggregated automatically @w10 - [ ] ld--todos: a task list item @w10 - [ ] ld--todos: a task list item @w10.1  ","tags":"","url":"_tasklist.html"},{"title":"Search Results","text":" ","tags":"","url":"search--results.html"}]};
